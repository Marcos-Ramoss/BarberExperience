version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: barber_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: barber_experience
      MYSQL_USER: barber_user
      MYSQL_PASSWORD: barber_pass
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - barber_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: barber_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - barber_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Opcional: Adminer para gerenciar o banco MySQL
  adminer:
    image: adminer:latest
    container_name: barber_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - barber_network
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  barber_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 